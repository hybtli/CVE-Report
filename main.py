import re
import webbrowser

import requests
from bs4 import BeautifulSoup

import Report

headers = {
    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) '
                  'Chrome/58.0.3029.110 Safari/537.36'
}


# Define a function named 'open_references' that takes a CVE ID as input
def open_references(cve_id):
    # Construct URLs for various websites related to the CVE ID
    nvd_url = f"https://nvd.nist.gov/vuln/detail/{cve_id}"
    exploit_db_url = f"https://www.exploit-db.com/search?cve={cve_id}"
    mitre_url = f"https://cve.mitre.org/cgi-bin/cvename.cgi?name={cve_id}"
    vulners_url = f"https://vulners.com/search?query={cve_id}"
    vulmon_url = f"https://vulmon.com/vulnerabilitydetails?qid={cve_id}"

    # Open each URL in a new browser tab
    webbrowser.open_new_tab(nvd_url)
    webbrowser.open_new_tab(exploit_db_url)
    webbrowser.open_new_tab(mitre_url)
    webbrowser.open_new_tab(vulners_url)
    webbrowser.open_new_tab(vulmon_url)


# Define a function named 'main' that serves as the entry point of the program.
def main():
    while True:
        # Display menu options for the user.
        print("[1]: Continue")
        print("[2]: Exit")

        try:
            # Try to get the user's choice as an integer.
            choice = int(input("Enter your choice: "))

            if choice == 1:
                while True:
                    # Prompt the user to enter a CVE ID.
                    cve_id = input("Enter CVE ID: ").strip()
                    cve_regex = r'^CVE-\d{4}-\d{4,}$'

                    # Construct the URL to fetch information from NVD.
                    url = f"https://nvd.nist.gov/vuln/detail/{cve_id}"
                    response = requests.get(url)
                    soup = BeautifulSoup(response.text, "html.parser")

                    # Check if the entered CVE ID matches the expected format.
                    if re.match(cve_regex, cve_id):
                        _id = soup.find("span", {"data-testid": "page-header-vuln-id"})
                        if _id:
                            while True:
                                # Display options for the report format.
                                print("What file type do you want the report in?")
                                print("[1]: Word")
                                print("[2]: Markdown")
                                print("[3]: PDF")

                                try:
                                    # Try to get the user's choice for the report format.
                                    report_choice = int(input("Please enter a valid choice: "))

                                    # Generate the report based on the user's choice.
                                    if report_choice == 1:
                                        filename = Report.create_docx(cve_id)
                                        break
                                    elif report_choice == 2:
                                        filename = Report.create_md(cve_id)
                                        break
                                    elif report_choice == 3:
                                        filename = Report.create_pdf(cve_id)
                                        break
                                    else:
                                        print("Invalid input. Please enter a valid choice (1, 2, or 3).")
                                except ValueError:
                                    print("Invalid input. Please enter a valid choice (1, 2, or 3).")

                            print(f"Report saved as: {filename}")
                            print("Do you want to continue the other procedure?")
                            break
                        else:
                            print("CVE ID is not available")
                    else:
                        print("Please, enter a valid CVE ID")
                        print("Example: CVE-2017-0144")
                        print("Remember, if you put extra space your choice will not be valid")

                open_references(cve_id)
            elif choice == 2:
                break
            else:
                print("Invalid input. Please enter a valid choice (1 or 2).")
        except ValueError:
            print("Invalid input. Please enter a valid choice (1 or 2).")

    webbrowser.open_new_tab("https://www.youtube.com/watch?v=dQw4w9WgXcQ")


# Check if the script is being run as the main program.
if __name__ == "__main__":
    main()
